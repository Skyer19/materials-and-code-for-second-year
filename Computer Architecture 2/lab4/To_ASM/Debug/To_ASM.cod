; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\temp\To_ASM\To_ASM\To_ASM.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	_wmain
EXTRN	__imp__getchar:PROC
EXTRN	__imp__printf:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
; File c:\temp\to_asm\to_asm\to_asm.cpp
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _wmain
_TEXT	SEGMENT
_i$5260 = -20						; size = 4
_total$ = -8						; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_wmain	PROC						; COMDAT

; 7    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 8    : register int total=0;

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _total$[ebp], 0

; 9    : for(register int i=0;i<=20;i++)

  00025	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$5260[ebp], 0
  0002c	eb 09		 jmp	 SHORT $LN3@wmain
$LN2@wmain:
  0002e	8b 45 ec	 mov	 eax, DWORD PTR _i$5260[ebp]
  00031	83 c0 01	 add	 eax, 1
  00034	89 45 ec	 mov	 DWORD PTR _i$5260[ebp], eax
$LN3@wmain:
  00037	83 7d ec 14	 cmp	 DWORD PTR _i$5260[ebp], 20 ; 00000014H
  0003b	7f 0b		 jg	 SHORT $LN1@wmain

; 10   : {
; 11   : total+=i;

  0003d	8b 45 f8	 mov	 eax, DWORD PTR _total$[ebp]
  00040	03 45 ec	 add	 eax, DWORD PTR _i$5260[ebp]
  00043	89 45 f8	 mov	 DWORD PTR _total$[ebp], eax

; 12   : }

  00046	eb e6		 jmp	 SHORT $LN2@wmain
$LN1@wmain:

; 13   : printf("%d",total);

  00048	8b f4		 mov	 esi, esp
  0004a	8b 45 f8	 mov	 eax, DWORD PTR _total$[ebp]
  0004d	50		 push	 eax
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__printf
  00059	83 c4 08	 add	 esp, 8
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 14   : getchar();

  00063	8b f4		 mov	 esi, esp
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__getchar
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 15   : return 0;

  00072	33 c0		 xor	 eax, eax

; 16   : }

  00074	5f		 pop	 edi
  00075	5e		 pop	 esi
  00076	5b		 pop	 ebx
  00077	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0007d	3b ec		 cmp	 ebp, esp
  0007f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
_wmain	ENDP
_TEXT	ENDS
END
