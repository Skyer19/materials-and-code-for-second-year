; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\temp\To_ASM\To_ASM\To_ASM.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__imp__getchar:PROC
EXTRN	__imp__printf:PROC
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
CONST	ENDS
PUBLIC	_wmain
; Function compile flags: /Ogtp
; File c:\temp\to_asm\to_asm\to_asm.cpp
;	COMDAT _wmain
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_wmain	PROC						; COMDAT

; 7    : {

  00000	56		 push	 esi

; 8    : register int total=0;

  00001	33 f6		 xor	 esi, esi

; 9    : for(register int i=0;i<=20;i++)

  00003	33 c0		 xor	 eax, eax
  00005	33 d2		 xor	 edx, edx
  00007	33 c9		 xor	 ecx, ecx
  00009	8d a4 24 00 00
	00 00		 npad	 7
$LL3@wmain:

; 10   : {
; 11   : total+=i;

  00010	03 f0		 add	 esi, eax
  00012	8d 4c 01 01	 lea	 ecx, DWORD PTR [ecx+eax+1]
  00016	8d 54 02 02	 lea	 edx, DWORD PTR [edx+eax+2]
  0001a	83 c0 03	 add	 eax, 3
  0001d	83 f8 14	 cmp	 eax, 20			; 00000014H
  00020	7e ee		 jle	 SHORT $LL3@wmain

; 12   : }
; 13   : printf("%d",total);

  00022	03 d1		 add	 edx, ecx
  00024	03 f2		 add	 esi, edx
  00026	56		 push	 esi
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__printf
  00032	83 c4 08	 add	 esp, 8

; 14   : getchar();

  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__getchar

; 15   : return 0;

  0003b	33 c0		 xor	 eax, eax
  0003d	5e		 pop	 esi

; 16   : }

  0003e	c3		 ret	 0
_wmain	ENDP
_TEXT	ENDS
END
